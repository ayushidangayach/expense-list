{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpenseList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expense.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseFilter","value","expenseFilter","onChange","e","filter","target","setExpenseFilter","ExpenseDate","month","date","toLocaleDateString","day","year","getFullYear","ExpenseItem","expenseDate","expenseTitle","title","expenseAmount","amount","ExpenseList","expenses","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","chartValues","dataPoints","dataPoint","max","ExpensesChart","getMonth","Expense","useState","toString","filterValue","ExpenseForm","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","changeExpenseForm","onSubmit","preventDefault","Date","onNewExpense","type","min","step","onClick","NewExpense","showExpenseForm","setShowExpenseForm","changeExpenseFormHandler","prevState","newExpenseContent","newExpense","random","onAddNewExpense","App","DUMMY_EXPENSES","setExpenses","prevExpense","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd19cecf.chunk.js","sourcesContent":["import './Card.css';\n\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n\n  return (\n    <div className={ classes }>{ props.children }</div>\n  )\n}\n\nexport default Card;","import './ExpenseFilter.css';\n\nconst ExpenseFilter = (props) => {\n\n  const filterChangeHandler = (filter) => {\n    props.setExpenseFilter(filter);\n  }\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={ props.expenseFilter } onChange={(e) => filterChangeHandler(e.target.value)}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default ExpenseFilter;","import './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleDateString('en-US', { month: 'long' });\n  const day = props.date.toLocaleDateString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;","import Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n\n  const expenseDate = props.date;\n\n  const expenseTitle = props.title;\n  const expenseAmount = props.amount;\n\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={ expenseDate }/>\n        <div className=\"expense-item__description\">\n          <h2>{expenseTitle}</h2>\n          <div className=\"expense-item__price\">${expenseAmount}</div>\n        </div>\n      </Card>\n    </li>\n  )\n}\n\nexport default ExpenseItem;","import ExpenseItem from './ExpenseItem';\nimport './ExpenseList.css';\n\nconst ExpenseList = (props) => {\n  let expenseContent = <p>No Expense Found.</p>;\n\n  if (props.expenses.length === 0) {\n    return (\n      <h2 className=\"expenses-list__fallback\">No Expenses Found.</h2>\n    )\n  }\n\n  return props.expenses.map((expense) => {\n      return (\n        <ul className=\"expenses-list\">\n          <ExpenseItem\n            key={expense.id}\n            amount={expense.amount}\n            title={expense.title}\n            date={expense.date}\n          />\n        </ul>\n      )\n    });\n}\n\nexport default ExpenseList;","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{height:barFillHeight}}\n        ></div>\n      </div>\n      <div>{ props.label }</div>\n    </div>\n  )\n}\n\nexport default ChartBar;","import './Chart.css';\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n\n  const chartValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const maxValue = Math.max(...chartValues);\n\n  return (\n    <div className=\"chart\">\n      {\n        props.dataPoints.map(dataPoint => {\n          return <ChartBar\n            key={dataPoint.label}\n            label={dataPoint.label}\n            value={dataPoint.value}\n            maxValue={maxValue}\n          />\n        })\n      }\n    </div>\n  )\n}\n\nexport default Chart;","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const dataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    dataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return (\n    <Chart\n      dataPoints={dataPoints}\n    />\n  );\n}\n\nexport default ExpensesChart;","import { useState } from 'react';\n\nimport Card from \"../UI/Card\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport ExpenseList from './ExpenseList';\nimport './Expenses.css';\nimport ExpensesChart from './ExpensesChart';\n\nconst Expense = (props) => {\n\n  const [expenseFilter, setExpenseFilter] = useState('2021');\n  let expenses = [\n    ...props.expenses\n  ];\n\n  const changeExpenseFilterValue = (filterValue) => {\n    setExpenseFilter(filterValue);\n  }\n\n  expenses = expenses.filter(expense => {\n    return expense.date.getFullYear().toString() === expenseFilter;\n  });\n  \n  return (\n    <Card className=\"expenses\">\n      <ExpenseFilter\n        expenseFilter={expenseFilter}\n        setExpenseFilter={changeExpenseFilterValue}\n      />\n      <ExpensesChart\n        expenses={expenses}\n      />\n      <ExpenseList\n      expenses={expenses}\n      />\n    </Card>\n  )\n}\n\nexport default Expense;","import React, { useState } from 'react';\n\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n\n  const titleChangeHandler = (e) => {\n    setEnteredTitle(e.target.value);\n  }\n\n  const dateChangeHandler = (e) => {\n    setEnteredDate(e.target.value);\n  }\n\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n  }\n\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n\n    const expense = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate)\n    }\n    \n    changeExpenseForm();\n    props.onNewExpense(expense);\n  }\n\n  const changeExpenseForm = () => {\n    setEnteredTitle('');\n    setEnteredDate('');\n    setEnteredAmount('');\n\n    props.changeExpenseForm();\n  }\n\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={titleChangeHandler}\n            value={enteredTitle}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            min=\"0.01\"\n            step=\"0.01\"\n            onChange={amountChangeHandler}\n            value={enteredAmount}\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2021-12-31\"\n            onChange={dateChangeHandler}\n            value={enteredDate}\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button\n          type=\"button\"\n          onClick={changeExpenseForm}\n          className=\"muted\"\n        >\n          Cancel\n        </button>\n        <button\n          type=\"submit\"\n        >Add Expense</button>\n      </div>\n    </form>\n  );\n}\n\nexport default ExpenseForm;","import { useState } from 'react';\n\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n\n  const [showExpenseForm, setShowExpenseForm] = useState(true);\n\n  const onNewExpense = expense => {\n    const newExpense = {\n      ...expense,\n      id: Math.random().toString()\n    }\n\n    props.onAddNewExpense(newExpense);\n  }\n\n  const changeExpenseFormHandler = () => {\n    setShowExpenseForm((prevState) => !prevState);\n  }\n\n  let newExpenseContent = <button onClick={changeExpenseFormHandler}>Add New Expense</button>\n  if (showExpenseForm) {\n    newExpenseContent = <ExpenseForm\n        onNewExpense={onNewExpense}\n        changeExpenseForm={changeExpenseFormHandler}\n      ></ExpenseForm>\n  }\n\n  return (\n    <div className=\"new-expense\">\n      {\n        newExpenseContent\n      }\n    </div>\n  );\n}\n\nexport default NewExpense;","import { useState } from 'react';\n\nimport Expense from './components/Expenses/Expense';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst App = () => {\n\n  const DUMMY_EXPENSES = [\n    {\n      id: 'e1',\n      title: 'Toilet Paper',\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: 'e3',\n      title: 'Car Insurance',\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: 'e4',\n      title: 'New Desk (Wooden)',\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const onAddNewExpense = expense => {\n    setExpenses(prevExpense => {\n      return [expense, ...prevExpense]\n    })\n  }\n\n  return (\n    <div>\n      <NewExpense onAddNewExpense={onAddNewExpense}></NewExpense>\n      <Expense expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}